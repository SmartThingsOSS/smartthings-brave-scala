brave {

  tracing {

    http {
      singleton = true
      name = "default"

      client-sampler {
        type = "smartthings.brave.scala.config.http.HttpSamplerConfigurator"
        mode = "always"
      }

      server-sampler {
        type = "smartthings.brave.scala.config.http.HttpSamplerConfigurator"
        mode = "always"
      }

      // example rule sampler config
      //server-sampler {
      //  type = "smartthings.brave.scala.config.http.HttpSamplerConfigurator"
      //  mode = "rule"
      //  rules = [{
      //    method = "GET"
      //    path = "/foo"
      //    rate = 0.1
      //  }]
      //}
    }

    singleton = true
    name = "default"

    clock {
      type = "default"
    }

    endpoint {
      type = "default"
    }

    local-service-name = "unknown"

    supports-join = true

    trace-id-128-bit = false

    sampler {
      type = "always-sampler"
    }

    always-sampler {
      type = "smartthings.brave.scala.config.SamplerConfigurator"
      mode = "always"
    }

    never-sampler {
      type = "smartthings.brave.scala.config.SamplerConfigurator"
      mode = "never"
    }

    counting-sampler {
      type = "smartthings.brave.scala.config.SamplerConfigurator"
      mode = "counting"
      rate = 0.01
    }

    boundary-sampler {
      type = "smartthings.brave.scala.config.SamplerConfigurator"
      mode = "boundary"
      rate = 0.0001
    }

    error-parser {
      type = "default"
    }

    span-reporter {
      type = "console-span-reporter"
    }

    console-span-reporter {
      type = "smartthings.brave.scala.config.SpanReporterConfigurator"
      mode = "console"
    }

    noop-span-reporter {
      type = "smartthings.brave.scala.config.SpanReporterConfigurator"
      mode = "noop"
    }

    sqs-span-reporter {
      type = "smartthings.brave.scala.config.SQSSpanReporterConfigurator"

      // required
      queue-url = ""

      message-max-bytes = 262144 // 256KB SQS limit

      encoding = "JSON" // JSON, Thrift, Protobuf

      // optional
      //aws-endpoint-confioguration {
      //  service-endpoint = "sqs.us-west-2.amazonaws.com"
      //  signing-region = "us-west-2"
      //}

      aws-credentials-provider {
        type = "smartthings.brave.scala.config.AWSCredentialsProviderConfigurator"

        // optional
        //access-key = ""

        // optional
        //secret-access-key = ""

        // optional
        //profile = ""

        // if STS role is specificed STS role assumption will be configured
        //sts-role-arn = ""
      }
    }
  }
}